// All-caps `RGBA()` function used because of this Sass bug: https://github.com/sass/node-sass/issues/2251
@each $color, $value in $theme-colors {
  .text-bg-#{$color} {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-hover#{$color}:hover {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-hover-#{$color}:hover {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-off-#{$color}:disabled {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-off-#{$color}:disabled {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-active-#{$color}:active {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-active-#{$color}:active {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }


  .text-bg-touch-#{$color}:selected {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-touch-#{$color}:selected {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-look-#{$color}:focus {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-look-#{$color}:focus {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-see-#{$color}:visited {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-see-#{$color}:visited {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-a-see-#{$color}:link {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-a-see-#{$color}:link {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }


  .text-bg-load-#{$color}:-moz-loading {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-load-#{$color}:-moz-loading {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-check-#{$color}:checked {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-check-#{$color}:checked {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }



  .text-bg-on-#{$color}:enabled {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-on-#{$color}:enabled {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }


  .text-bg-valid-#{$color}:valid {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-valid-#{$color}:valid {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }


  .text-bg-invalid-#{$color}:invalid {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-invalid-#{$color}:invalid {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }


  .text-bg-target-#{$color}:target {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-target-#{$color}:target {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-rq-#{$color}:required {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-rq-#{$color}:required {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-stop-#{$color}:paused {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-stop-#{$color}:paused {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }


  .text-bg-play-#{$color}:playing {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-play-#{$color}:playing {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .text-bg-justsee-#{$color}:read-only {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }

  .bg-justsee-#{$color}:read-only {
    color: color-contrast($value) if($enable-important-utilities, !important, null);
    background-color: RGBA(var(--#{$prefix}#{$color}-rgb), var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
  }



}